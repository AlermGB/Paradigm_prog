# ● Условие
# На вход подается число n.
# ● Задача
# Написать скрипт в любой парадигме, который выводит на экран
# таблицу умножения всех чисел от 1 до n.
# Обоснуйте выбор парадигм.
# ● Пример вывода:
# 1 * 1 = 1
# 1 * 2 = 2
# 1 * 3 = 3
# 1 * 4 = 4
# 1 * 5 = 5
# 1 * 6 = 6
# ..
# 1 * 9 = 9

# задача реализована в императивном стиле, т.к. нам
# требуется выполнять ряд последовательных действий;
#  Python не допускает использования оператора goto,
#  отсюда выбор структурной парадигмы не только соответствует
#  современному написанию кода, но и является вынужденным;
# программа написана в процедурной парадигме, что улучшает ее читаемость


def multiplication_printing(n):
    for i in range(1, n + 1):
        for j in range(1, 10):
            print(f'{i} * {j} = {i * j}')
        print()


def input_n():
    print()
    input_number = 0
    while input_number not in range(1, 10):
        input_number = int(input('Введите число от 1 до 9: '))
    return input_number


multiplication_printing(input_n())
